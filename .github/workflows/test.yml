name: test

on:
  push:
  schedule:
    - cron: "0 20 * * 5" # JST 5:00 (Sat)

env:
  CI: "true"

jobs:
  test:
    runs-on: ubuntu-latest

    container: ${{ matrix.ruby }}

    strategy:
      fail-fast: false

      matrix:
        ruby:
          - ruby:2.3
          - ruby:2.4
          - ruby:2.5
          - ruby:2.6
          - ruby:2.7
        gemfile:
          - activerecord_5_0.gemfile
          - activerecord_5_1.gemfile
          - activerecord_5_2.gemfile
          - activerecord_6_0.gemfile
        database:
          - sqlite3
          - mysql
          - postgresql
          - oracle
        exclude:
          # Rails 6.0 requires Ruby 2.5+
          - ruby:    ruby:2.3
            gemfile: activerecord_6_0.gemfile
          - ruby:    ruby:2.4
            gemfile: activerecord_6_0.gemfile

    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}
      DATABASE: ${{ matrix.database }}
      LD_LIBRARY_PATH: /opt/oracle/instantclient_19_3
      NLS_LANG: AMERICAN_AMERICA.UTF8
      ORACLE_SYSTEM_PASSWORD: oracle

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
      postgresql:
        image: postgres:10-alpine
        ports:
          - 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      oracle:
        image: deepdiver/docker-oracle-xe-11g
        ports:
          - 1521
        env:
          ORACLE_SYSTEM_PASSWORD: oracle

    steps:
      - uses: actions/checkout@v2

      - name: Cache vendor/bundle
        uses: actions/cache@v1
        id: cache_gem
        with:
          path: vendor/bundle
          key: v1-gem-${{ runner.os }}-${{ matrix.ruby }}-${{ matrix.gemfile }}-${{ matrix.database }}-${{ github.sha }}
          restore-keys: |
            v1-gem-${{ runner.os }}-${{ matrix.ruby }}-${{ matrix.gemfile }}-${{ matrix.database }}-
            v1-gem-${{ runner.os }}-${{ matrix.ruby }}-${{ matrix.gemfile }}-

      - name: Install
        run: |
          set -xe
          ./ci/install.sh

      - name: Setup Code Climate Test Reporter
        uses: aktions/codeclimate-test-reporter@v1
        with:
          codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
          command: before-build
        if: matrix.ruby >= 'ruby:2.4'
        continue-on-error: ${{ matrix.ruby == 'rubylang/ruby:master-nightly-bionic' }}

      - name: Run test
        run: |
          set -xe
          ./ci/build.sh
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
          POSTGRESQL_PORT: ${{ job.services.postgresql.ports['5432'] }}
          ORACLE_PORT: ${{ job.services.oracle.ports['1521'] }}

      - name: Teardown Code Climate Test Reporter
        uses: aktions/codeclimate-test-reporter@v1
        with:
          codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
          command: after-build
        if: matrix.ruby >= 'ruby:2.4' && always()
        continue-on-error: ${{ matrix.ruby == 'rubylang/ruby:master-nightly-bionic' }}

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: ${{ format('*build* ({0}, {1}, {2})', matrix.ruby, matrix.gemfile, matrix.database) }}
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  rubocop:
    runs-on: ubuntu-16.04

    container: ruby:2.3

    env:
      RUBY_IMAGE: ruby:2.3

    steps:
      - uses: actions/checkout@v2

      - name: Cache vendor/bundle
        uses: actions/cache@v1
        id: cache_gem_rubocop
        with:
          path: vendor/bundle
          key: v1-gem-rubocop-${{ runner.os }}-${{ env.RUBY_IMAGE }}-${{ github.sha }}
          restore-keys: |
            v1-gem-rubocop-${{ runner.os }}-${{ env.RUBY_IMAGE }}-

      - name: Install
        run: |
          set -xe
          ./ci/install.sh

      - name: Run rubocop
        run: |
          set -xe
          bundle exec rubocop

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*rubocop*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs:
      - test
      - rubocop

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: homoluctus/slatify@v2.0.0
        if: always()
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
